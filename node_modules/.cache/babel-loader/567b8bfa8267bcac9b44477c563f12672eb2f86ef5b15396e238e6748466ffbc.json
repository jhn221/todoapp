{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBegin = getBegin;\nexports.getBeginNext = getBeginNext;\nexports.getBeginNext2 = void 0;\nexports.getBeginOfCenturyYear = getBeginOfCenturyYear;\nexports.getBeginOfDecadeYear = getBeginOfDecadeYear;\nexports.getBeginOfWeek = getBeginOfWeek;\nexports.getBeginPrevious = getBeginPrevious;\nexports.getBeginPrevious2 = void 0;\nexports.getCenturyLabel = getCenturyLabel;\nexports.getDayOfWeek = getDayOfWeek;\nexports.getDecadeLabel = getDecadeLabel;\nexports.getEnd = getEnd;\nexports.getEndPrevious = getEndPrevious;\nexports.getEndPrevious2 = void 0;\nexports.getRange = getRange;\nexports.getValueRange = getValueRange;\nexports.getWeekNumber = getWeekNumber;\nexports.isWeekend = isWeekend;\nvar _dateUtils = require(\"@wojtekmaj/date-utils\");\nvar _const = require(\"./const\");\nvar _dateFormatter = require(\"./dateFormatter\");\nvar SUNDAY = _const.WEEKDAYS[0];\nvar FRIDAY = _const.WEEKDAYS[5];\nvar SATURDAY = _const.WEEKDAYS[6];\n\n/* Simple getters - getting a property of a given point in time */\n\nfunction getDayOfWeek(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var weekday = date.getDay();\n  switch (calendarType) {\n    case _const.CALENDAR_TYPES.ISO_8601:\n      // Shifts days of the week so that Monday is 0, Sunday is 6\n      return (weekday + 6) % 7;\n    case _const.CALENDAR_TYPES.ARABIC:\n      return (weekday + 1) % 7;\n    case _const.CALENDAR_TYPES.HEBREW:\n    case _const.CALENDAR_TYPES.US:\n      return weekday;\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n}\n\n/**\n * Century\n */\n\nfunction getBeginOfCenturyYear(date) {\n  var beginOfCentury = (0, _dateUtils.getCenturyStart)(date);\n  return (0, _dateUtils.getYear)(beginOfCentury);\n}\n\n/**\n * Decade\n */\nfunction getBeginOfDecadeYear(date) {\n  var beginOfDecade = (0, _dateUtils.getDecadeStart)(date);\n  return (0, _dateUtils.getYear)(beginOfDecade);\n}\n\n/**\n * Week\n */\n\n/**\n * Returns the beginning of a given week.\n *\n * @param {Date} date Date.\n * @param {string} calendarType Calendar type. Can be ISO 8601 or US.\n */\nfunction getBeginOfWeek(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var year = (0, _dateUtils.getYear)(date);\n  var monthIndex = (0, _dateUtils.getMonth)(date);\n  var day = date.getDate() - getDayOfWeek(date, calendarType);\n  return new Date(year, monthIndex, day);\n}\n\n/**\n * Gets week number according to ISO 8601 or US standard.\n * In ISO 8601, Arabic and Hebrew week 1 is the one with January 4.\n * In US calendar week 1 is the one with January 1.\n *\n * @param {Date} date Date.\n * @param {string} calendarType Calendar type. Can be ISO 8601 or US.\n */\nfunction getWeekNumber(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var calendarTypeForWeekNumber = calendarType === _const.CALENDAR_TYPES.US ? _const.CALENDAR_TYPES.US : _const.CALENDAR_TYPES.ISO_8601;\n  var beginOfWeek = getBeginOfWeek(date, calendarType);\n  var year = (0, _dateUtils.getYear)(date) + 1;\n  var dayInWeekOne;\n  var beginOfFirstWeek;\n\n  // Look for the first week one that does not come after a given date\n  do {\n    dayInWeekOne = new Date(year, 0, calendarTypeForWeekNumber === _const.CALENDAR_TYPES.ISO_8601 ? 4 : 1);\n    beginOfFirstWeek = getBeginOfWeek(dayInWeekOne, calendarType);\n    year -= 1;\n  } while (date < beginOfFirstWeek);\n  return Math.round((beginOfWeek - beginOfFirstWeek) / (8.64e7 * 7)) + 1;\n}\n\n/**\n * Others\n */\n\n/**\n * Returns the beginning of a given range.\n *\n * @param {string} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nfunction getBegin(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyStart)(date);\n    case 'decade':\n      return (0, _dateUtils.getDecadeStart)(date);\n    case 'year':\n      return (0, _dateUtils.getYearStart)(date);\n    case 'month':\n      return (0, _dateUtils.getMonthStart)(date);\n    case 'day':\n      return (0, _dateUtils.getDayStart)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nfunction getBeginPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getPreviousCenturyStart)(date);\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeStart)(date);\n    case 'year':\n      return (0, _dateUtils.getPreviousYearStart)(date);\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthStart)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nfunction getBeginNext(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getNextCenturyStart)(date);\n    case 'decade':\n      return (0, _dateUtils.getNextDecadeStart)(date);\n    case 'year':\n      return (0, _dateUtils.getNextYearStart)(date);\n    case 'month':\n      return (0, _dateUtils.getNextMonthStart)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nvar getBeginPrevious2 = function getBeginPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeStart)(date, -100);\n    case 'year':\n      return (0, _dateUtils.getPreviousYearStart)(date, -10);\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthStart)(date, -12);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\nexports.getBeginPrevious2 = getBeginPrevious2;\nvar getBeginNext2 = function getBeginNext2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, _dateUtils.getNextDecadeStart)(date, 100);\n    case 'year':\n      return (0, _dateUtils.getNextYearStart)(date, 10);\n    case 'month':\n      return (0, _dateUtils.getNextMonthStart)(date, 12);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n\n/**\n * Returns the end of a given range.\n *\n * @param {string} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nexports.getBeginNext2 = getBeginNext2;\nfunction getEnd(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyEnd)(date);\n    case 'decade':\n      return (0, _dateUtils.getDecadeEnd)(date);\n    case 'year':\n      return (0, _dateUtils.getYearEnd)(date);\n    case 'month':\n      return (0, _dateUtils.getMonthEnd)(date);\n    case 'day':\n      return (0, _dateUtils.getDayEnd)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nfunction getEndPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getPreviousCenturyEnd)(date);\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeEnd)(date);\n    case 'year':\n      return (0, _dateUtils.getPreviousYearEnd)(date);\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthEnd)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nvar getEndPrevious2 = function getEndPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeEnd)(date, -100);\n    case 'year':\n      return (0, _dateUtils.getPreviousYearEnd)(date, -10);\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthEnd)(date, -12);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n\n/**\n * Returns an array with the beginning and the end of a given range.\n *\n * @param {string} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nexports.getEndPrevious2 = getEndPrevious2;\nfunction getRange(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyRange)(date);\n    case 'decade':\n      return (0, _dateUtils.getDecadeRange)(date);\n    case 'year':\n      return (0, _dateUtils.getYearRange)(date);\n    case 'month':\n      return (0, _dateUtils.getMonthRange)(date);\n    case 'day':\n      return (0, _dateUtils.getDayRange)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n\n/**\n * Creates a range out of two values, ensuring they are in order and covering entire period ranges.\n *\n * @param {string} rangeType Range type (e.g. 'day')\n * @param {Date} date1 First date.\n * @param {Date} date2 Second date.\n */\nfunction getValueRange(rangeType, date1, date2) {\n  var rawNextValue = [date1, date2].sort(function (a, b) {\n    return a - b;\n  });\n  return [getBegin(rangeType, rawNextValue[0]), getEnd(rangeType, rawNextValue[1])];\n}\nfunction toYearLabel(locale) {\n  var formatYear = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _dateFormatter.formatYear;\n  var dates = arguments.length > 2 ? arguments[2] : undefined;\n  return dates.map(function (date) {\n    return formatYear(locale, date);\n  }).join(' â€“ ');\n}\n\n/**\n * Returns a string labelling a century of a given date.\n * For example, for 2017 it will return 2001-2100.\n *\n * @param {Date|String|Number} date Date or a year as a string or as a number.\n */\nfunction getCenturyLabel(locale, formatYear, date) {\n  return toYearLabel(locale, formatYear, (0, _dateUtils.getCenturyRange)(date));\n}\n\n/**\n * Returns a string labelling a century of a given date.\n * For example, for 2017 it will return 2011-2020.\n *\n * @param {Date|String|Number} date Date or a year as a string or as a number.\n */\nfunction getDecadeLabel(locale, formatYear, date) {\n  return toYearLabel(locale, formatYear, (0, _dateUtils.getDecadeRange)(date));\n}\n\n/**\n * Returns a boolean determining whether a given date is on Saturday or Sunday.\n *\n * @param {Date} date Date.\n */\nfunction isWeekend(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var weekday = date.getDay();\n  switch (calendarType) {\n    case _const.CALENDAR_TYPES.ARABIC:\n    case _const.CALENDAR_TYPES.HEBREW:\n      return weekday === FRIDAY || weekday === SATURDAY;\n    case _const.CALENDAR_TYPES.ISO_8601:\n    case _const.CALENDAR_TYPES.US:\n      return weekday === SATURDAY || weekday === SUNDAY;\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getBegin","getBeginNext","getBeginNext2","getBeginOfCenturyYear","getBeginOfDecadeYear","getBeginOfWeek","getBeginPrevious","getBeginPrevious2","getCenturyLabel","getDayOfWeek","getDecadeLabel","getEnd","getEndPrevious","getEndPrevious2","getRange","getValueRange","getWeekNumber","isWeekend","_dateUtils","require","_const","_dateFormatter","SUNDAY","WEEKDAYS","FRIDAY","SATURDAY","date","calendarType","arguments","length","undefined","CALENDAR_TYPES","ISO_8601","weekday","getDay","ARABIC","HEBREW","US","Error","beginOfCentury","getCenturyStart","getYear","beginOfDecade","getDecadeStart","year","monthIndex","getMonth","day","getDate","Date","calendarTypeForWeekNumber","beginOfWeek","dayInWeekOne","beginOfFirstWeek","Math","round","rangeType","getYearStart","getMonthStart","getDayStart","concat","getPreviousCenturyStart","getPreviousDecadeStart","getPreviousYearStart","getPreviousMonthStart","getNextCenturyStart","getNextDecadeStart","getNextYearStart","getNextMonthStart","getCenturyEnd","getDecadeEnd","getYearEnd","getMonthEnd","getDayEnd","getPreviousCenturyEnd","getPreviousDecadeEnd","getPreviousYearEnd","getPreviousMonthEnd","getCenturyRange","getDecadeRange","getYearRange","getMonthRange","getDayRange","date1","date2","rawNextValue","sort","a","b","toYearLabel","locale","formatYear","dates","map","join"],"sources":["/Users/taehokim/Desktop/hanna/codeStates/todoapp/node_modules/react-calendar/dist/cjs/shared/dates.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBegin = getBegin;\nexports.getBeginNext = getBeginNext;\nexports.getBeginNext2 = void 0;\nexports.getBeginOfCenturyYear = getBeginOfCenturyYear;\nexports.getBeginOfDecadeYear = getBeginOfDecadeYear;\nexports.getBeginOfWeek = getBeginOfWeek;\nexports.getBeginPrevious = getBeginPrevious;\nexports.getBeginPrevious2 = void 0;\nexports.getCenturyLabel = getCenturyLabel;\nexports.getDayOfWeek = getDayOfWeek;\nexports.getDecadeLabel = getDecadeLabel;\nexports.getEnd = getEnd;\nexports.getEndPrevious = getEndPrevious;\nexports.getEndPrevious2 = void 0;\nexports.getRange = getRange;\nexports.getValueRange = getValueRange;\nexports.getWeekNumber = getWeekNumber;\nexports.isWeekend = isWeekend;\nvar _dateUtils = require(\"@wojtekmaj/date-utils\");\nvar _const = require(\"./const\");\nvar _dateFormatter = require(\"./dateFormatter\");\nvar SUNDAY = _const.WEEKDAYS[0];\nvar FRIDAY = _const.WEEKDAYS[5];\nvar SATURDAY = _const.WEEKDAYS[6];\n\n/* Simple getters - getting a property of a given point in time */\n\nfunction getDayOfWeek(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var weekday = date.getDay();\n  switch (calendarType) {\n    case _const.CALENDAR_TYPES.ISO_8601:\n      // Shifts days of the week so that Monday is 0, Sunday is 6\n      return (weekday + 6) % 7;\n    case _const.CALENDAR_TYPES.ARABIC:\n      return (weekday + 1) % 7;\n    case _const.CALENDAR_TYPES.HEBREW:\n    case _const.CALENDAR_TYPES.US:\n      return weekday;\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n}\n\n/**\n * Century\n */\n\nfunction getBeginOfCenturyYear(date) {\n  var beginOfCentury = (0, _dateUtils.getCenturyStart)(date);\n  return (0, _dateUtils.getYear)(beginOfCentury);\n}\n\n/**\n * Decade\n */\nfunction getBeginOfDecadeYear(date) {\n  var beginOfDecade = (0, _dateUtils.getDecadeStart)(date);\n  return (0, _dateUtils.getYear)(beginOfDecade);\n}\n\n/**\n * Week\n */\n\n/**\n * Returns the beginning of a given week.\n *\n * @param {Date} date Date.\n * @param {string} calendarType Calendar type. Can be ISO 8601 or US.\n */\nfunction getBeginOfWeek(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var year = (0, _dateUtils.getYear)(date);\n  var monthIndex = (0, _dateUtils.getMonth)(date);\n  var day = date.getDate() - getDayOfWeek(date, calendarType);\n  return new Date(year, monthIndex, day);\n}\n\n/**\n * Gets week number according to ISO 8601 or US standard.\n * In ISO 8601, Arabic and Hebrew week 1 is the one with January 4.\n * In US calendar week 1 is the one with January 1.\n *\n * @param {Date} date Date.\n * @param {string} calendarType Calendar type. Can be ISO 8601 or US.\n */\nfunction getWeekNumber(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var calendarTypeForWeekNumber = calendarType === _const.CALENDAR_TYPES.US ? _const.CALENDAR_TYPES.US : _const.CALENDAR_TYPES.ISO_8601;\n  var beginOfWeek = getBeginOfWeek(date, calendarType);\n  var year = (0, _dateUtils.getYear)(date) + 1;\n  var dayInWeekOne;\n  var beginOfFirstWeek;\n\n  // Look for the first week one that does not come after a given date\n  do {\n    dayInWeekOne = new Date(year, 0, calendarTypeForWeekNumber === _const.CALENDAR_TYPES.ISO_8601 ? 4 : 1);\n    beginOfFirstWeek = getBeginOfWeek(dayInWeekOne, calendarType);\n    year -= 1;\n  } while (date < beginOfFirstWeek);\n  return Math.round((beginOfWeek - beginOfFirstWeek) / (8.64e7 * 7)) + 1;\n}\n\n/**\n * Others\n */\n\n/**\n * Returns the beginning of a given range.\n *\n * @param {string} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nfunction getBegin(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyStart)(date);\n    case 'decade':\n      return (0, _dateUtils.getDecadeStart)(date);\n    case 'year':\n      return (0, _dateUtils.getYearStart)(date);\n    case 'month':\n      return (0, _dateUtils.getMonthStart)(date);\n    case 'day':\n      return (0, _dateUtils.getDayStart)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nfunction getBeginPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getPreviousCenturyStart)(date);\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeStart)(date);\n    case 'year':\n      return (0, _dateUtils.getPreviousYearStart)(date);\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthStart)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nfunction getBeginNext(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getNextCenturyStart)(date);\n    case 'decade':\n      return (0, _dateUtils.getNextDecadeStart)(date);\n    case 'year':\n      return (0, _dateUtils.getNextYearStart)(date);\n    case 'month':\n      return (0, _dateUtils.getNextMonthStart)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nvar getBeginPrevious2 = function getBeginPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeStart)(date, -100);\n    case 'year':\n      return (0, _dateUtils.getPreviousYearStart)(date, -10);\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthStart)(date, -12);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\nexports.getBeginPrevious2 = getBeginPrevious2;\nvar getBeginNext2 = function getBeginNext2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, _dateUtils.getNextDecadeStart)(date, 100);\n    case 'year':\n      return (0, _dateUtils.getNextYearStart)(date, 10);\n    case 'month':\n      return (0, _dateUtils.getNextMonthStart)(date, 12);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n\n/**\n * Returns the end of a given range.\n *\n * @param {string} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nexports.getBeginNext2 = getBeginNext2;\nfunction getEnd(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyEnd)(date);\n    case 'decade':\n      return (0, _dateUtils.getDecadeEnd)(date);\n    case 'year':\n      return (0, _dateUtils.getYearEnd)(date);\n    case 'month':\n      return (0, _dateUtils.getMonthEnd)(date);\n    case 'day':\n      return (0, _dateUtils.getDayEnd)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nfunction getEndPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getPreviousCenturyEnd)(date);\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeEnd)(date);\n    case 'year':\n      return (0, _dateUtils.getPreviousYearEnd)(date);\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthEnd)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nvar getEndPrevious2 = function getEndPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeEnd)(date, -100);\n    case 'year':\n      return (0, _dateUtils.getPreviousYearEnd)(date, -10);\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthEnd)(date, -12);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n\n/**\n * Returns an array with the beginning and the end of a given range.\n *\n * @param {string} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nexports.getEndPrevious2 = getEndPrevious2;\nfunction getRange(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyRange)(date);\n    case 'decade':\n      return (0, _dateUtils.getDecadeRange)(date);\n    case 'year':\n      return (0, _dateUtils.getYearRange)(date);\n    case 'month':\n      return (0, _dateUtils.getMonthRange)(date);\n    case 'day':\n      return (0, _dateUtils.getDayRange)(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n\n/**\n * Creates a range out of two values, ensuring they are in order and covering entire period ranges.\n *\n * @param {string} rangeType Range type (e.g. 'day')\n * @param {Date} date1 First date.\n * @param {Date} date2 Second date.\n */\nfunction getValueRange(rangeType, date1, date2) {\n  var rawNextValue = [date1, date2].sort(function (a, b) {\n    return a - b;\n  });\n  return [getBegin(rangeType, rawNextValue[0]), getEnd(rangeType, rawNextValue[1])];\n}\nfunction toYearLabel(locale) {\n  var formatYear = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _dateFormatter.formatYear;\n  var dates = arguments.length > 2 ? arguments[2] : undefined;\n  return dates.map(function (date) {\n    return formatYear(locale, date);\n  }).join(' â€“ ');\n}\n\n/**\n * Returns a string labelling a century of a given date.\n * For example, for 2017 it will return 2001-2100.\n *\n * @param {Date|String|Number} date Date or a year as a string or as a number.\n */\nfunction getCenturyLabel(locale, formatYear, date) {\n  return toYearLabel(locale, formatYear, (0, _dateUtils.getCenturyRange)(date));\n}\n\n/**\n * Returns a string labelling a century of a given date.\n * For example, for 2017 it will return 2011-2020.\n *\n * @param {Date|String|Number} date Date or a year as a string or as a number.\n */\nfunction getDecadeLabel(locale, formatYear, date) {\n  return toYearLabel(locale, formatYear, (0, _dateUtils.getDecadeRange)(date));\n}\n\n/**\n * Returns a boolean determining whether a given date is on Saturday or Sunday.\n *\n * @param {Date} date Date.\n */\nfunction isWeekend(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var weekday = date.getDay();\n  switch (calendarType) {\n    case _const.CALENDAR_TYPES.ARABIC:\n    case _const.CALENDAR_TYPES.HEBREW:\n      return weekday === FRIDAY || weekday === SATURDAY;\n    case _const.CALENDAR_TYPES.ISO_8601:\n    case _const.CALENDAR_TYPES.US:\n      return weekday === SATURDAY || weekday === SUNDAY;\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}